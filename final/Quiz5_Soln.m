% This program/script opens all spoken yes and no files in the data set,
% trims, filters, and computes the Mel Cepstrum (MC) coefficients for the
% first and last half off the trimmed data segment.  
%  The Fishers Criteron is plotted for each MC.
%
%   Kevin D. Donohue April 2017 (kevin.donohue1@uky.edu)

clear
close all
%  File names for the "NO" and "Yes" utterances
wfiles = {  'n01.wav'; ...
            'n02.wav'; ...
            'n03.wav'; ...
            'n04.wav'; ...
            'n05.wav'; ...
            'n06.wav'; ...
            'n07.wav'; ...
            'n08.wav'; ...
            'n09.wav'; ...
            'n10.wav'; ...
            'n11.wav'; ...
            'n12.wav'; ...
            'n13.wav'; ...
            'n14.wav'; ...
            'n15.wav'; ...
            'n16.wav'; ...
            'n17.wav'; ...
            'n18.wav'; ...
            'n19.wav'; ...
            'n20.wav'; ...
            'n21.wav'; ...
            'n22.wav'; ...
            'n23.wav'; ...
            'n24.wav'; ...
            'n25.wav'; ...
            'n26.wav'; ...
            'n27.wav'; ...
            'n28.wav'; ...
            'n29.wav'; ...
            'n30.wav'; ...
            'n31.wav'; ...
            'n32.wav'; ...
            'n33.wav'; ...
            'y01.wav'; ...
            'y02.wav'; ...
            'y03.wav'; ...
            'y04.wav'; ...
            'y05.wav'; ...
            'y06.wav'; ...
            'y07.wav'; ...
            'y08.wav'; ...
            'y09.wav'; ...
            'y10.wav'; ...
            'y11.wav'; ...
            'y12.wav'; ...
            'y13.wav'; ...
            'y14.wav'; ...
            'y15.wav'; ...
            'y16.wav'; ...
            'y17.wav'; ...
            'y18.wav'; ...
            'y19.wav'; ...
            'y20.wav'; ...
            'y21.wav'; ...
            'y22.wav'; ...
            'y23.wav'; ...
            'y24.wav'; ...
            'y25.wav'; ...
            'y26.wav'; ...
            'y27.wav'; ...
            'y28.wav'; ...
            'y29.wav'; ...
            'y30.wav'; ...
            'y31.wav'; ...
            'y32.wav'; ...
            'y33.wav'};
        
 fs = 16e3;
%  Preemphasis filter for Mel Cepstrum Estimates
 b = [1 -.95];
 a = 1; 
 %  Read in files filter and trim 
 ycnt = 0; % initalize yes feature vector counter
 ncnt = 0; % initalize no feature vector counter
 ff1n = [];  % initalize the MCs matrix for no first half
 ff1y = []; % initalize the MCs matrix for yes first half
 ff2n = []; % initalize the MCs matrix for no last half
 ff2y = []; % initalize the MCs matrix for yes last half
 dan = [];  % initalize the simple delta matrix for no
 day = [];  % initalize the simple delta matrix for yes
 
 %  Loop through all files and compute the Mel Cepstrum
 for k = 1 : length(wfiles)
     [y,fs] = audioread(wfiles{k});
     %  plot signal and envelop for reference
     tax = [0:length(y)-1]/fs;
     %  Apply highpass to remove measurement and room noise
     yf = filtfilt(b,a,y);    
     % trim off non-utternace part
     [ytrim, kb ,ke] = trimit(yf,fs);
     mid = floor(length(ytrim)/2);
     bytrim = ytrim(1:mid-400);  % Get first half data
     eytrim = ytrim(mid+400:end); % Get last half data
     %  Comptue MC and delta vectors
    ff1 = mfcc(bytrim,fs);
    ff2 = mfcc(eytrim,fs);
    d   = ff1-ff2;
 %  Create matrices from the MC vectors for reach utterance for later analysis 
     if wfiles{k}(1) == 'n'  % If a no is being processed
         ncnt = ncnt + 1; % Increment no counter
         ff1n = [ff1n; ff1]; % Append to MC no matrix - first half
         ff2n = [ff2n; ff2]; % Append to MC no matrix - second half
         dan = [dan; d];  % Append to detla not matrix
         
         %  Select the coefficints for a 3-d feature plot - need to make
         %  these the same of for the yes case below
         fean(1,ncnt) = d(1);
         fean(2,ncnt) = d(3);
         fean(3,ncnt) = d(8);

     else  % If a yes is being processed
         ycnt = ycnt +1;  % Increment yes counter
         ff1y = [ff1y; ff1]; % Append to MC yes matrix - first half
         ff2y = [ff2y; ff2]; % Append to MC yes matrix - second half
         day = [day; d]; % Append to dela yes matrix - first half

         %  Select the coefficints for a 3-d feature plot - need to make
         %  these the same of for the no case above
            feay(1,ycnt) = d(1);
            feay(2,ycnt) = d(3);
            feay(3,ycnt) = d(8);
     end
 end
 
 figure(1)  % Freate plot in 3-d space
 plot3(fean(1,:), fean(2,:), fean(3,:), 'xr'); hold on
 plot3(feay(1,:), feay(2,:), feay(3,:), 'bo'); hold off
 title('Feature plot for yes and no utterances')
 xlabel('first MFCC Delta')
 ylabel('third MFCC Delta')
 ylabel('eight MFCC Delta')
 legend('No', 'Yes')
 
 figure(2)  %  FC plot for first half MCs
 fcff1 = abs(mean(ff1n) - mean(ff1y)) ./ sqrt (std(ff1n).^2 + std(ff1y).^2)/2;
 bar(fcff1)
 xlabel('Mel Cepstrum Coefficient Index - First Half')
 ylabel('FC in STDs')
 
 figure(3) %  FC plot for second half MCs
 fcff2 = abs(mean(ff2n) - mean(ff2y)) ./ sqrt (std(ff2n).^2 + std(ff2y).^2)/2;
 bar(fcff2)
 xlabel('Mel Cepstrum Coefficient Index - Second half')
 ylabel('FC in STDs')

 figure(4) % FC plot for the delta
 fcda = abs(mean(dan) - mean(day)) ./ sqrt ((std(dan).^2 + std(day).^2)/2);
 bar(fcda)
 xlabel('Mel Cepstrum Coefficient Index - Deltas')
 ylabel('FC in STDs')